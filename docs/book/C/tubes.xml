<?xml version='1.0'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
               "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY mdash "&#8212;">
]>

<chapter id="chapter.tubes">
 <title>Tubes</title>

 <para>
  Telepathy Tubes provide a user-to-user or user-to-group networking layer
  which applications can use to transfer data. Unlike a traditional
  peer-to-peer network, which requires IP addresses or a service discovery
  mechanism for locating peers, Telepathy Tubes provides contact-to-contact
  data transfer. Telepathy connection managers handle network traversal
  using the same technology as for file transfer and streamed media.
 </para>

 <para>
  Telepathy currently offers two data formats for Tubes.
  <interfacename>StreamTube</interfacename> channels allow for a regular
  network socket to be shared between clients. This is best when adapting
  existing applications or protocols to run over Telepathy Tubes.
  <interfacename>DBusTube</interfacename> channels allow for a D-Bus bus to
  be shared between clients. This enables the use of D-Bus method calling and
  signalling rather than requiring the developer to develop their own
  network protocol and should be strongly considered for new applications.
 </para>

 <para>
  Telepathy Tubes can either be one-to-one (between two users) or
  one-to-many (between a group of users).
 </para>

 <note>
  <title>An Example of Using Tubes in Your Application</title>

  <para>
   Alice wants Bob’s help in editing her report. In Alice’s word processor
   she chooses the option to collaboratively edit this document and she is
   shown a list of instant-messaging contacts who are enabled for Telepathy
   Tubes. She selects Bob's name from the list.
  </para>

  <para>
   The application requests an appropriate Tube channel from the Connection
   Manager. This channel is received and dispatched by Telepathy on Bob's
   computer. He is asked if he wishes to collaborate with Alice.
  </para>

  <para>
   Bob accepts the channel. The Telepathy Connection Managers set up the
   best data stream from the available options given the type of network and
   the communications protocol.
  </para>
 </note>

 <sect1 id="sect.tubes.compatibility">
  <title>Compatibility</title>

  <para>
   Support for Telepathy Tubes requires certain features in the connection
   manager and communications protocol, and thus cannot be supported by
   every connection manager. <xref linkend="table.tubes.compatibility"/>
   provides a list of known working connection managers.
  </para>

  <table id="table.tubes.compatibility">
   <tgroup cols="3">
    <thead>
     <row>
      <entry>Connection Manager</entry>
      <entry>One-to-One Tubes</entry>
      <entry>One-to-Many Tubes</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry>Gabble</entry>
      <entry>Stream, D-Bus</entry>
      <entry>Stream, D-Bus</entry>
     </row>
     <row>
      <entry>Salut</entry>
      <entry></entry>
      <entry></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <note>
   <title>XMPP Protocol Support</title>

   <para>
    Telepathy Tubes over XMPP uses a protocol extension has been documented
    <ulink url="http://telepathy.freedesktop.org/xmpp/tubes.html">on the
    Telepathy website</ulink>. It has not been submitted as a XEP.
   </para>
  </note>

 </sect1>

 <sect1 id="sect.tubes.setup">
  <title>Creating a Tube</title>

  <para>
   Telepathy Tubes are created by calling
   <methodname>CreateChannel</methodname> with the type of Tube, target and
   required properties (see <xref linkend="sect.channel.requesting"/>). The
   target can either be a contact (<type>Handle_Type_Contact</type>) or a room
   (<type>Handle_Type_Room</type>). <xref linkend="ex.tubes.setup.maps"/>
   gives some example parameter maps to create Tubes.
  </para>

  <warning>
   <title>Don't Use Old (Deprecated) Tubes API</title>

   <para>
    Telepathy originally had a different API for implementing Telepathy
    Tubes,
    <interfacename>org.freedesktop.Telepathy.Channel.Type.Tubes</interfacename>.
   </para>
   <para>
    This API was deprecated because it had several serious design flaws and
    did not allow for future expansion.
   </para>
  </warning>

  <example id="ex.tubes.setup.maps">
   <title>Example Parameter Maps to Create Tubes</title>
   <informaltable>
    <title>D-Bus, One-to-One Tube</title>
    <tgroup cols="2">
     <tbody>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.ChannelType</entry>
       <entry><interfacename>org.freedesktop.Telepathy.Channel.Type.DBusTube</interfacename></entry>
      </row>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.TargetHandleType</entry>
       <entry><type>Handle_Type_Contact</type></entry>
      </row>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.TargetID</entry>
       <entry>"bob@example.com"</entry>
      </row>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.Type.DBusTube.ServiceName</entry>
       <entry>"com.example.ExampleService"</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>

   <informaltable>
    <title>D-Bus, One-to-Many Tube</title>
    <tgroup cols="2">
     <tbody>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.ChannelType</entry>
       <entry><interfacename>org.freedesktop.Telepathy.Channel.Type.DBusTube</interfacename></entry>
      </row>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.TargetHandleType</entry>
       <entry><type>Handle_Type_Room</type></entry>
      </row>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.TargetID</entry>
       <entry>"tubegame@conference.xmpp.example.com"</entry>
      </row>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.Type.DBusTube.ServiceName</entry>
       <entry>"com.example.TubeGame"</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>

   <informaltable>
    <title>Stream, One-to-One Tube</title>
    <tgroup cols="2">
     <tbody>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.ChannelType</entry>
       <entry><interfacename>org.freedesktop.Telepathy.Channel.Type.StreamTube</interfacename></entry>
      </row>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.TargetHandleType</entry>
       <entry><type>Handle_Type_Contact</type></entry>
      </row>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.TargetID</entry>
       <entry>"bob@example.com"</entry>
      </row>
      <row>
       <entry>org.freedesktop.Telepathy.Channel.Type.StreamTube.Service</entry>
       <entry>"ssh"</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </example>

  <para>
   Once the initiator has created the channel, it must be offered to the
   receipient/group. This is done by calling the
   <methodname>Offer</methodname> method. The parameters to this method
   depend on the type of Tube that is being offered. Once the Tube is
   offered it will be in the <literal>Remote Pending</literal> state.
  </para>

  <para>
   <xref linkend="fig.tubes.setup"/> presents an overview of setting up a
   Tube.
  </para>

  <figure id="fig.tubes.setup">
   <title>Flowchart for Setting up a Tube</title>
   <mediaobject><imageobject>
    <imagedata fileref="figures/tube-actors.png"
               format="PNG" />
   </imageobject></mediaobject>
  </figure>

  <sect2 id="sect.tubes.setup.dbus">
   <title>Offering a D-Bus Tube</title>

   <para>
    When creating the Tube, you must specify the property
    <property>org.freedesktop.Telepathy.Channel.Type.DBusTube.ServiceName</property>,
    which gives the name of the D-Bus service you intend to offer.
   </para>

   <note><para>
    The Tube sets up a private D-Bus bus, and you may in fact offer any
    service name or names you like, but the service name offered here is the
    one that will be used by the Channel Dispatcher to dispatch your Tube to
    the correct client.
   </para></note>

   <para>
    The <methodname>DbusTube.Offer</methodname> method takes two parameters:
   </para>
   <orderedlist>
    <listitem><para>
     a map of arbitrary parameters to transmit with the Tube offer; and
    </para></listitem>
    <listitem><para>
     an access control flag.
    </para></listitem>
   </orderedlist>

   <para>
    The parameter map allows properties to be passed that will be useful in
    deciding whether to accept the Tube (e.g. the name of the file
    to collaborate on; or specifics of the game being played), or
    information about how to connect to other clients once this Tube is
    established.
   </para>

   <para>
    The access control flag should be set to
    <type>Socket_Access_Control_Localhost</type>. No other type makes sense
    for a D-Bus connection.
   </para>

   <para>
    If the contact does not support Tubes, <methodname>Offer</methodname>
    will return
    the <errorname>NotAvailable</errorname> error. Otherwise the address of
    a private D-Bus bus will be supplied.
   </para>

   <para>
    Connection to the private bus is done using
    <function>dbus_connection_open</function>,
    <function>dbus_g_connection_open</function> or other similar function.
   </para>

  </sect2>

  <sect2 id="sect.tubes.setup.stream">
   <title>Offering a Stream Tube</title>

   <para>
    When creating a Stream Tube, you must specify the property
    <property>org.freedesktop.Telepathy.Channel.Type.StreamTube.Service</property>,
    which is the canonical name of the service your Tube is offering (e.g.
    ssh).
   </para>

   <para>
    The <methodname>StreamTube.Offer</methodname> method takes four
    parameters:
   </para>
   <orderedlist>
    <listitem><para>
     the socket type;
    </para></listitem>
    <listitem><para>
     the address of the service to offer (see below);
    </para></listitem>
    <listitem><para>
     an access control flag; and
    </para></listitem>
    <listitem><para>
     a map of arbitrary parameters to transmit with the Tube offer.
    </para></listitem>
   </orderedlist>

   <para>
    Stream Tubes differ from D-Bus Tubes in that it is assumed that a Stream
    Tube will frequently be used to proxy an existing protocol or
    service. Thus unlike for D-Bus Tubes or file transfer, the socket
    you wish to offer must already be set up and listening as if you were
    writing a regular network service. This address is then passed to
    the <methodname>Offer</methodname> method.
    The socket can either be a UNIX socket, an IPv4 socket or an IPv6
    socket.
   </para>

   <para>
    The appropriate access control should be chosen based on the socket type
    and the service. Typically it will be either
    <type>Socket_Access_Control_Localhost</type> or
    <type>Socket_Access_Control_Port</type>.
   </para>

   <para>
    The parameter map is the same as for D-Bus Tubes.
   </para>
  </sect2>

 </sect1>

</chapter>
