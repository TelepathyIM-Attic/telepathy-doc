--- main.c	2008-08-18 11:55:37.000000000 +0200
+++ main_working.c	2008-08-18 11:40:07.000000000 +0200
@@ -40,46 +40,35 @@ on_list_connection_managers(TpConnection
   //TODO: See http://bugs.freedesktop.org/show_bug.cgi?id=17115
   //about the awkwardness of these pointers to pointers:
   TpConnectionManager * const *cm_iter = connection_manager;
-  for (; cm_iter != NULL; ++cm_iter)
+  for (; *cm_iter != NULL; ++cm_iter)
     {
-      const TpConnectionManager *cm = *cm_iter;
-      if (!cm)
-        continue;
-
+      TpConnectionManager * cm = *cm_iter;
       //TODO: The protocols really shouldn't be const.
       //const shouldn't be used for complex types in C because C doesn't have full const support.
       //For instance, g_object_get() takes a non-const, so this causes a warning:
       gchar *cm_name = NULL;
+
       g_object_get (G_OBJECT(cm),
         "connection-manager", &cm_name,
         NULL);
 
       g_printf ("  Connection Manager name: %s\n", cm_name);
+
       g_free (cm_name);
-      cm_name = NULL;
-      continue;
 
-#if 0
       //TODO: See http://bugs.freedesktop.org/show_bug.cgi?id=17112
       //about the lack of real API for this:
       //Note that it's an array of pointers, not a pointer to an array
       //(unlike the connection_manager array above.)
-      const TpConnectionManagerProtocol * const *protocols = cm->protocols;
-      const TpConnectionManagerProtocol * const *protocols_iter = protocols;
-      for (; protocols_iter != NULL; ++protocols_iter)
-        {
-          if(!protocols_iter)
-            continue;
+      TpConnectionManagerProtocol * const *protocols;
 
-          const TpConnectionManagerProtocol *protocol = *protocols_iter;
-          if (protocol)
-            {
-              if(protocol->name)
-                g_printf ("    Protocol name: %s\n", protocol->name);
-            }
+      for (protocols = (TpConnectionManagerProtocol * const *)cm->protocols;
+          protocols != NULL && *protocols != NULL; ++protocols)
+        {
+          TpConnectionManagerProtocol *protocol = *protocols;
+          if (protocol->name)
+            g_printf ("    Protocol name: %s\n", protocol->name);
         }
-#endif
-
 
     }
 
